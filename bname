#!/usr/bin/env bash
set -e

was_sourced="${BASH_SOURCE[0]}"
[ "${was_sourced}" = "$0" ] && was_sourced=

#echo "$bname_bucket"
#echo "Files: $bname_files"
#for bname_cursor in $bname_files; do
#  echo "f: $bname_cursor"
#done

function bname_key() {
  date -d "${BNAME_DATE}" '+%y%m%d%U_%Y%m%d%H%M'
}

function bname_snapshot() {
  local bname_key=$(bname_key)
  case $1 in
    year)
      echo "1_${bname_key}_${2}"
      ;;
    month)
      echo "2_${bname_key}_${2}"
      ;;
    week)
      echo "3_${bname_key}_${2}"
      ;;
    day)
      echo "4_${bname_key}_${2}"
      ;;
  esac
}

##
#
##
function bname_retention() {
  local bname_retention=${BNAME_RETENTION:-1/0}

  case $1 in
    day)
      echo "${bname_retention}" | cut -d/ -f1
      ;;
  esac
}

##
#
##
function bname_char_mask() {
  local file=$1
  for position in $2; do
    # shellcheck disable=SC2001
    file=$(echo "${file}" | sed "s/./^/${position}")
  done
  echo "${file}"
}

##
#
##
function bname_mask() {
  case "$1" in
    build:day)
      # shellcheck disable=SC2001
      bname_char_mask "$2" "9 10 12 13 14 15 16 17 18 19 20 21 22 23"
      ;;
    build:week)
      # shellcheck disable=SC2001
      bname_char_mask "$2" "5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23"
      ;;
    build:month)
      # shellcheck disable=SC2001
      bname_char_mask "$2" "5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23"
      ;;
    build:year)
      # shellcheck disable=SC2001
      bname_char_mask "$2" "5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23"
      ;;
    clean:day)
      # shellcheck disable=SC2001
      bname_char_mask "$2" "3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21"
      ;;
    clean:week)
      # shellcheck disable=SC2001
      bname_char_mask "$2" "3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21"
      ;;
    clean:month)
      # shellcheck disable=SC2001
      bname_char_mask "$2" "3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21"
      ;;
    clean:year)
      # shellcheck disable=SC2001
      bname_char_mask "$2" "3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21"
      ;;
  esac
}

##
# Build
##
function bname_build() {
  bname_stage=$1
  bname_build=yes
  bname_snapshot=$(bname_snapshot "${bname_stage}" "${bname_file}")
  bname_a=$(bname_mask "build:${bname_stage}" "$bname_snapshot")
  for file in $bname_bucket; do
    bname_b=$(bname_mask "build:${bname_stage}" "$file")
    echo "## build check: $bname_snapshot ($bname_a) vs $file ($bname_b)"
    [ "${bname_a}" = "${bname_b}" ] && bname_build=no
  done
  if [ "${bname_build}" = "yes" ]; then
    echo "+ $bname_snapshot"
  else
    echo "# ignore '$bname_snapshot'"
  fi
}

##
# Clean
##
function bname_clean() {
  bname_count=0
  bname_clean=no
  bname_stage=$1
  bname_snapshot=$(bname_snapshot "${bname_stage}" "${bname_file}")
  bname_build_a=$(bname_mask "build:${bname_stage}" "$bname_snapshot")
  bname_clean_a=$(bname_mask "clean:${bname_stage}" "$bname_snapshot")
  for file in $bname_bucket; do
    bname_build_b=$(bname_mask "build:${bname_stage}" "$file")
    bname_clean_b=$(bname_mask "clean:${bname_stage}" "$file")
    #echo "## - build check: $bname_snapshot ($bname_build_a) vs $file ($bname_build_b)"
    #echo "##   clean check: $bname_snapshot ($bname_clean_a) vs $file ($bname_clean_b)"
    if [ "${bname_clean_a}" = "${bname_clean_b}" ]; then
      if [ "${bname_build_a}" = "${bname_build_b}" ]; then
        bname_clean=yes
      fi
      if [ "${bname_clean}" = "yes" ]; then
        bname_count=$((++bname_count))
      fi
      if [ "${bname_count}" -gt "1" ]; then
        echo "- ${file}"
      fi
    fi
  done
}

##
#
##
function main() {
  bname_file=$1
  bname_bucket=$(while read -r line; do echo "${line}"; done | sort -r | xargs)
  bname_stages="day week month year"
  bname_stages="day"
  for stage in $bname_stages; do
    #echo "## Stage: ${stage}"
    bname_build "$stage"
    #bname_clean "$stage"
  done
}

##
#
##
if [ -n "${was_sourced}" ]; then
  export -f bname_retention
else
  main "${@}"
fi
